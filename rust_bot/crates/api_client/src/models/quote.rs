/* 
 * API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Quote {
  #[serde(rename = "quote")]
  quote: Option<String>,
  #[serde(rename = "author")]
  author: Option<String>,
  #[serde(rename = "id")]
  id: Option<i32>
}

impl Quote {
  pub fn new() -> Quote {
    Quote {
      quote: None,
      author: None,
      id: None
    }
  }

  pub fn set_quote(&mut self, quote: String) {
    self.quote = Some(quote);
  }

  pub fn with_quote(mut self, quote: String) -> Quote {
    self.quote = Some(quote);
    self
  }

  pub fn quote(&self) -> Option<&String> {
    self.quote.as_ref()
  }

  pub fn reset_quote(&mut self) {
    self.quote = None;
  }

  pub fn set_author(&mut self, author: String) {
    self.author = Some(author);
  }

  pub fn with_author(mut self, author: String) -> Quote {
    self.author = Some(author);
    self
  }

  pub fn author(&self) -> Option<&String> {
    self.author.as_ref()
  }

  pub fn reset_author(&mut self) {
    self.author = None;
  }

  pub fn set_id(&mut self, id: i32) {
    self.id = Some(id);
  }

  pub fn with_id(mut self, id: i32) -> Quote {
    self.id = Some(id);
    self
  }

  pub fn id(&self) -> Option<&i32> {
    self.id.as_ref()
  }

  pub fn reset_id(&mut self) {
    self.id = None;
  }

}



