/* 
 * API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct KeyWord {
  #[serde(rename = "name")]
  name: Option<String>,
  #[serde(rename = "responses")]
  responses: Option<Vec<String>>,
  #[serde(rename = "match_case")]
  match_case: Option<bool>
}

impl KeyWord {
  pub fn new() -> KeyWord {
    KeyWord {
      name: None,
      responses: None,
      match_case: None
    }
  }

  pub fn set_name(&mut self, name: String) {
    self.name = Some(name);
  }

  pub fn with_name(mut self, name: String) -> KeyWord {
    self.name = Some(name);
    self
  }

  pub fn name(&self) -> Option<&String> {
    self.name.as_ref()
  }

  pub fn reset_name(&mut self) {
    self.name = None;
  }

  pub fn set_responses(&mut self, responses: Vec<String>) {
    self.responses = Some(responses);
  }

  pub fn with_responses(mut self, responses: Vec<String>) -> KeyWord {
    self.responses = Some(responses);
    self
  }

  pub fn responses(&self) -> Option<&Vec<String>> {
    self.responses.as_ref()
  }

  pub fn reset_responses(&mut self) {
    self.responses = None;
  }

  pub fn set_match_case(&mut self, match_case: bool) {
    self.match_case = Some(match_case);
  }

  pub fn with_match_case(mut self, match_case: bool) -> KeyWord {
    self.match_case = Some(match_case);
    self
  }

  pub fn match_case(&self) -> Option<&bool> {
    self.match_case.as_ref()
  }

  pub fn reset_match_case(&mut self) {
    self.match_case = None;
  }

}



